name: Publish Docker Images to Harbor
on:
  workflow_dispatch:
    inputs:
      level:
        type: choice
        description: 'Incremental Level'
        required: true
        default: 'prerelease'
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codes
        uses: actions/checkout@v2

      - name: Check if the branch is possible to release
        env:
          LEVEL: ${{ github.event.inputs.level }}
        run: |
          if [ "${GITHUB_REF##*/}" != "stage" ] \
            && [ "${GITHUB_REF##*/}" != "hotfix" ] \
            && [ "${GITHUB_REF##*/}" != "main" ] ; then
            echo "Only stage, hotfix and main branches can be used for this release script"
            exit 1
          fi
          if [[ "${GITHUB_REF##*/}" == "main" ]] \
            && [[ "${LEVEL}" =~ (premajor|preminor|prepatch|prerelease) ]]  ; then
            echo "main branch can not use pre-* release"
            exit 1
          fi
          if [[ "${GITHUB_REF##*/}" =~ ^(stage|hotfix) ]] \
            && [[ "${LEVEL}" =~ ^(major|minor|patch) ]] ; then
            echo "both stage and hotfix branchs can not use official release"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install semver
        run: |
          npm install --global semver

      - name: Get the current version
        id: get-current-version
        run: |
          CURRENT_VERSION=$(awk -F'[ ="]+' '$1 == "version" { print $2 }' dockerproject.toml)
          echo "::set-output name=CURRENT_VERSION::${CURRENT_VERSION}"

      - name: Stop if prerelease is not allowed
        env:
          LEVEL: ${{ github.event.inputs.level }}
          CURRENT_VERSION: ${{ steps.get-current-version.outputs.CURRENT_VERSION }}
        run: |
          if [[ "${LEVEL}" = "prerelease" ]] ; then
            case "${CURRENT_VERSION}" in
              *"-stage."*) ;;
              *"-hotfix."*) ;;
              *)
                echo "[prerelease] is not allowed."
                exit 1
                ;;
            esac
          fi

      - name: Get the bumped version
        id: get-bumped-version
        env:
          LEVEL: ${{ github.event.inputs.level }}
          CURRENT_VERSION: ${{ steps.get-current-version.outputs.CURRENT_VERSION }}
        run: |
          if [[ "${LEVEL}" =~ (premajor|preminor|prepatch|prerelease) ]] ; then
            PREID="${GITHUB_REF##*/}"
            PREOPTION="--preid ${PREID}"
          else
            PREOPTION=""
          fi
          BUMPED_VERSION=$(semver --increment ${LEVEL} ${PREOPTION} ${CURRENT_VERSION})
          echo "::set-output name=BUMPED_VERSION::${BUMPED_VERSION}"

      - name: Update the version related files
        env:
          CURRENT_VERSION: ${{ steps.get-current-version.outputs.CURRENT_VERSION }}
          BUMPED_VERSION: ${{ steps.get-bumped-version.outputs.BUMPED_VERSION }}
        run: |
          sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${BUMPED_VERSION}\"/" dockerproject.toml

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Harbor
        uses: docker/login-action@v2
        with:
          registry: harbor.fulfillment-dev.click
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build the Docker image - ArgoCD
        run: docker build -t harbor.fulfillment-dev.click/fulfillment/argocd . --no-cache --tag argocd:${{ steps.get-bumped-version.outputs.BUMPED_VERSION }}

      - name: Docker Push
        run: docker push harbor.fulfillment-dev.click/fulfillment/argocd --tag argocd:${{ steps.get-bumped-version.outputs.BUMPED_VERSION }}

      - name: Commit, Tag and Push
        uses: EndBug/add-and-commit@v7
        with:
          message: Bump the version from ${{ steps.get-current-version.outputs.CURRENT_VERSION}} to ${{ steps.get-bumped-version.outputs.BUMPED_VERSION}} by ${{ github.event.inputs.level }}
          add: "src"
          pathspec_error_handling: exitImmediately
          tag: ${{ steps.get-bumped-version.outputs.BUMPED_VERSION}}
          push: true
